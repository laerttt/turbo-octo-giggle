{
    "nodes": [
        {
            "parameters": {
                "fieldToSplitOut": "items",
                "options": {}
            },
            "type": "n8n-nodes-base.splitOut",
            "typeVersion": 1,
            "position": [
                300,
                80
            ],
            "id": "0fe1cf99-fcf3-40c4-8ce4-cfacc0382b66",
            "name": "Split Out"
        },
        {
            "parameters": {
                "assignments": {
                    "assignments": [
                        {
                            "id": "0d13abd7-2025-478d-b4c5-abce0ff74e24",
                            "name": "iic",
                            "value": "={{ $json.body.qrUrl.split('iic=')[1].split('&')[0] }}",
                            "type": "string"
                        },
                        {
                            "id": "ae968358-b141-4eb9-9b69-d90adc3fce45",
                            "name": "tin",
                            "value": "={{ $json.body.qrUrl.split('tin=')[1].split('&')[0] }}",
                            "type": "string"
                        },
                        {
                            "id": "9c40befa-bf82-4601-850e-8625d01919ee",
                            "name": "crtd",
                            "value": "={{ $json.body.qrUrl.split('crtd=')[1].split('&')[0].replace('+',' ') }}",
                            "type": "string"
                        }
                    ]
                },
                "options": {}
            },
            "type": "n8n-nodes-base.set",
            "typeVersion": 3.4,
            "position": [
                -140,
                0
            ],
            "id": "6fc84d39-90d2-410e-a851-1b4f80bc1a48",
            "name": "get body data"
        },
        {
            "parameters": {
                "method": "POST",
                "url": "https://efiskalizimi-app.tatime.gov.al/invoice-check/api/verifyInvoice",
                "sendHeaders": true,
                "headerParameters": {
                    "parameters": [
                        {
                            "name": "Content-Type",
                            "value": "application/x-www-form-urlencoded;charset=UTF-8"
                        }
                    ]
                },
                "sendBody": true,
                "bodyParameters": {
                    "parameters": [
                        {
                            "name": "iic",
                            "value": "={{ $json.iic }}"
                        },
                        {
                            "name": "dateTimeCreated",
                            "value": "={{ $json.crtd }}"
                        },
                        {
                            "name": "tin",
                            "value": "={{ $json.tin }}"
                        }
                    ]
                },
                "options": {}
            },
            "type": "n8n-nodes-base.httpRequest",
            "typeVersion": 4.2,
            "position": [
                80,
                80
            ],
            "id": "c20cf2d0-7fbc-4756-b994-097f104be774",
            "name": "request verifyInvoice"
        },
        {
            "parameters": {
                "assignments": {
                    "assignments": [
                        {
                            "id": "a4365d29-25b4-498f-945c-93007d37281c",
                            "name": "category",
                            "value": "={{ $json.output }}",
                            "type": "string"
                        }
                    ]
                },
                "options": {}
            },
            "type": "n8n-nodes-base.set",
            "typeVersion": 3.4,
            "position": [
                1100,
                300
            ],
            "id": "5edaadc1-332b-4faa-8556-e3733989a198",
            "name": "edit output"
        },
        {
            "parameters": {
                "respondWith": "allIncomingItems",
                "options": {}
            },
            "type": "n8n-nodes-base.respondToWebhook",
            "typeVersion": 1.4,
            "position": [
                1760,
                100
            ],
            "id": "ae15c6f7-3061-4fb8-af5e-60ab7704fc0b",
            "name": "respond to webapp"
        },
        {
            "parameters": {
                "assignments": {
                    "assignments": [
                        {
                            "id": "95f5cdb3-b21f-46ef-b694-be38974de7c3",
                            "name": "database_items",
                            "value": "={{ $json.body.items }}",
                            "type": "string"
                        }
                    ]
                },
                "options": {}
            },
            "type": "n8n-nodes-base.set",
            "typeVersion": 3.4,
            "position": [
                300,
                360
            ],
            "id": "67a31f6b-b061-4fc5-927f-fd85593788dc",
            "name": "category data"
        },
        {
            "parameters": {
                "httpMethod": "POST",
                "path": "5e2c443b-fd50-48ce-8946-e6a006f37493",
                "responseMode": "responseNode",
                "options": {}
            },
            "type": "n8n-nodes-base.webhook",
            "typeVersion": 2,
            "position": [
                -360,
                100
            ],
            "id": "d5697d5d-1fef-4f8a-9314-210b1918836f",
            "name": "get data from webapp",
            "webhookId": "5e2c443b-fd50-48ce-8946-e6a006f37493"
        },
        {
            "parameters": {
                "mode": "combine",
                "combineBy": "combineAll",
                "options": {}
            },
            "type": "n8n-nodes-base.merge",
            "typeVersion": 3.2,
            "position": [
                520,
                300
            ],
            "id": "0fb363e0-f5e9-4628-b611-116d57f3a259",
            "name": "user input + training data"
        },
        {
            "parameters": {
                "mode": "combine",
                "combineBy": "combineByPosition",
                "options": {}
            },
            "type": "n8n-nodes-base.merge",
            "typeVersion": 3.2,
            "position": [
                1320,
                180
            ],
            "id": "ce00dbee-6c87-4dc1-8f58-ff38698528b4",
            "name": "category + other data"
        },
        {
            "parameters": {},
            "type": "n8n-nodes-base.merge",
            "typeVersion": 3.2,
            "position": [
                1540,
                100
            ],
            "id": "5e89b2f7-23de-4264-ad0c-44e9d5bc4fa2",
            "name": "date + other data"
        },
        {
            "parameters": {
                "httpMethod": "POST",
                "path": "f19e2e1b-6572-4e3a-ae89-61a00238f5cc",
                "responseMode": "responseNode",
                "options": {}
            },
            "type": "n8n-nodes-base.webhook",
            "typeVersion": 2,
            "position": [
                -300,
                640
            ],
            "id": "e18bbbb2-9d94-4ef8-86b9-12244167ff00",
            "name": "get user question+ data",
            "webhookId": "f19e2e1b-6572-4e3a-ae89-61a00238f5cc"
        },
        {
            "parameters": {
                "respondWith": "allIncomingItems",
                "options": {}
            },
            "type": "n8n-nodes-base.respondToWebhook",
            "typeVersion": 1.4,
            "position": [
                280,
                640
            ],
            "id": "79030f15-aa6a-4148-b88f-4813962dfb37",
            "name": "respond with answer"
        },
        {
            "parameters": {
                "modelName": "models/gemini-2.5-flash",
                "options": {}
            },
            "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
            "typeVersion": 1,
            "position": [
                700,
                660
            ],
            "id": "143615a9-5178-420f-a55e-0ea98c11c1f2",
            "name": "gemini 2.5 flash",
            "credentials": {
                "googlePalmApi": {
                    "id": "H5826MvBdHpdpD1N",
                    "name": "Google Gemini(PaLM) Api account"
                }
            }
        },
        {
            "parameters": {
                "modelName": "models/gemini-2.5-flash",
                "options": {}
            },
            "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
            "typeVersion": 1,
            "position": [
                0,
                760
            ],
            "id": "16339795-67fa-4209-8fef-80b4d91925e4",
            "name": "gemini 2.5 flash1",
            "credentials": {
                "googlePalmApi": {
                    "id": "H5826MvBdHpdpD1N",
                    "name": "Google Gemini(PaLM) Api account"
                }
            }
        },
        {
            "parameters": {
                "promptType": "define",
                "text": "={{ $json.name }}",
                "options": {
                    "systemMessage": "=You have a reference list of items, each with a name, a category, and a date:\n{{ $json.database_items }}\nWhenever the user submits an item name (which might be in any language):\n\n1. **Exact match**  \n   • Look up the item in the reference list (case-insensitive).  \n   • If you find it, return its category.\n\n2. **Duplicate entries**  \n   • If the same name appears multiple times with different categories, choose the category that occurs most often for that item in the list.  \n   • If two (or more) categories tie for most occurrences, pick the one with the newest date.\n\n\n3. **No exact match**  \n   • Translate the user’s word into English.  \n   • Based on its meaning, assign the most appropriate category yourself."
                }
            },
            "type": "@n8n/n8n-nodes-langchain.agent",
            "typeVersion": 2,
            "position": [
                740,
                300
            ],
            "id": "bc21ed54-ba92-4962-911f-1c84acf77ced",
            "name": "Categorizer Agent"
        },
        {
            "parameters": {
                "promptType": "define",
                "text": "={{ $json.body.question }}",
                "options": {
                    "systemMessage": "=The agent knows the following invoice items:\n{{ JSON.stringify($json.body.items, null, 1) }}\n**Behavior rules:**  \n1. Always reply **in the same language** the user uses.  \n2. Never mention that these come from a provided dataset—just act as if you “know” them.  \n3. When quoting or calculating prices, append “ALL” for the currency.  \n4. Base all answers strictly on these items: names, categories, dates, units, prices.  \n5. For any summary (totals, averages, comparisons), perform the math step by step in the user’s language.  \n6. For trend or per-unit analyses (e.g. “most expensive per KG?”), use only the given data.\n\nProceed by answering the user’s next question.  \n"
                }
            },
            "type": "@n8n/n8n-nodes-langchain.agent",
            "typeVersion": 2,
            "position": [
                -80,
                540
            ],
            "id": "d994a729-1938-4ba7-b212-6807273c0806",
            "name": "Analytics Agent"
        }
    ],
    "connections": {
        "Split Out": {
            "main": [
                [
                    {
                        "node": "category + other data",
                        "type": "main",
                        "index": 0
                    },
                    {
                        "node": "user input + training data",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "get body data": {
            "main": [
                [
                    {
                        "node": "request verifyInvoice",
                        "type": "main",
                        "index": 0
                    },
                    {
                        "node": "date + other data",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "request verifyInvoice": {
            "main": [
                [
                    {
                        "node": "Split Out",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "edit output": {
            "main": [
                [
                    {
                        "node": "category + other data",
                        "type": "main",
                        "index": 1
                    }
                ]
            ]
        },
        "category data": {
            "main": [
                [
                    {
                        "node": "user input + training data",
                        "type": "main",
                        "index": 1
                    }
                ]
            ]
        },
        "get data from webapp": {
            "main": [
                [
                    {
                        "node": "get body data",
                        "type": "main",
                        "index": 0
                    },
                    {
                        "node": "category data",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "user input + training data": {
            "main": [
                [
                    {
                        "node": "Categorizer Agent",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "category + other data": {
            "main": [
                [
                    {
                        "node": "date + other data",
                        "type": "main",
                        "index": 1
                    }
                ]
            ]
        },
        "date + other data": {
            "main": [
                [
                    {
                        "node": "respond to webapp",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "get user question+ data": {
            "main": [
                [
                    {
                        "node": "Analytics Agent",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "gemini 2.5 flash": {
            "ai_languageModel": [
                [
                    {
                        "node": "Categorizer Agent",
                        "type": "ai_languageModel",
                        "index": 0
                    }
                ]
            ]
        },
        "gemini 2.5 flash1": {
            "ai_languageModel": [
                [
                    {
                        "node": "Analytics Agent",
                        "type": "ai_languageModel",
                        "index": 0
                    }
                ]
            ]
        },
        "Categorizer Agent": {
            "main": [
                [
                    {
                        "node": "edit output",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "Analytics Agent": {
            "main": [
                [
                    {
                        "node": "respond with answer",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        }
    },
    "pinData": {},
    "meta": {
        "instanceId": "eeb3a955b8a4397b75f7ea4ec6adcd71a61f511a947fc165d657e58a69603e4f"
    }
}